version: '3.8'

services:
  traefik:
    image: traefik:v3.5
    container_name: traefik
    restart: unless-stopped
    command:
      # Traefik configuration
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=INFO
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --providers.docker.network=traefik-network
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      # Dashboard configuration
      - "traefik.http.routers.dashboard.rule=Host(`ops.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.middlewares.dashboard-strip.stripprefix.prefixes=/dashboard"
      - "traefik.http.routers.dashboard.middlewares=auth,dashboard-strip"
      # Basic Auth middleware (user: admin, password: secret)
      # Generated with: htpasswd -nbB admin secret | sed -e 's/\$/\$\$/g'
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2b$$10$$8K1p/wFIiUy1nF8J6azqg.dkQXGGpJt4GOfcSYF.HFgvL7CrGgTOa"

  neo4j:
    image: neo4j:5.22.0-community
    container_name: neo4j_db
    restart: unless-stopped
    environment:
      NEO4J_AUTH: "neo4j/supersecurepassword"
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
    # No ports exposed to host - internal access only
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - traefik-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474/browser/"]
      interval: 30s
      timeout: 10s
      retries: 3

  flask_api:
    build: ./flask-api
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      NEO4J_URI: "bolt://neo4j_db:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "supersecurepassword"
      FLASK_ENV: "production"
      PORT: "5000"
    # No ports exposed to host - accessed through Traefik only
    networks:
      - traefik-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      # API Router
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=api-ratelimit"
      # Service configuration
      - "traefik.http.services.api.loadbalancer.server.port=5000"
      # Rate limiting middleware (10 requests per second)
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=10"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.period=1s"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=20"

networks:
  traefik-network:
    driver: bridge

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local